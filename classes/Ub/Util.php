<?php

const UB_ICON_WARN = "‚ö†Ô∏è";
const UB_ICON_SUCCESS = "‚úÖ";
const UB_ICON_SUCCESS_OFF = "‚ùé";
const UB_ICON_NOTICE = "üìù";
const UB_ICON_INFO = "üóì";
const UB_ICON_DANGER = "üìõ";
const UB_ICON_COMMENT = "üí¨";
const UB_ICON_CONFIG = "‚öôÔ∏è";
const UB_ICON_CATALOG = "üóÇ";
const UB_ICON_STATS = "üìä";

class UbUtil {

	public static function json(array $array): false|string
    {
		return json_encode($array, JSON_UNESCAPED_UNICODE);
	}

	public static function echoJson(array $array): void
    {
		echo json_encode($array, JSON_UNESCAPED_UNICODE);
	}

	public static function errorVkResponse(array $error): array
    {
		return self::buildErrorResponse('vk_error', $error['error_msg'], $error['error_code']);
	}

	public static function echoErrorVkResponse($error): void
    {
		self::echoJson(self::errorVkResponse($error));
	}

	public static function buildErrorResponse($type, $message, $code): array
    {
		return ['response' => $type, 'error_message' => $message, 'error_code' => $code];
	}

	public static function echoError($message, $code = -1): void
    {
		echo json_encode(self::buildErrorResponse('error', $message, $code), JSON_UNESCAPED_UNICODE);
	}

    public static function getVkErrorText($error): ?string
    {
        $errorCode = $error['error_code'];
        $eMessage = $error['error_msg'];
        $errorMessage = null;
        switch ($errorCode) {
            case VK_BOT_ERROR_ACCESS_DENIED :
                if (str_contains($eMessage, 'already in'))
                    $errorMessage = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –±–µ—Å–µ–¥–µ';
                else if (str_contains($eMessage, 'can\'t add this'))
                    $errorMessage = '–ù–µ –º–æ–≥—É –¥–æ–±–∞–≤–∏—Ç—å. –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –º–æ–∏—Ö –¥—Ä—É–∑—å—è—Ö.';
                break;
            case VK_BOT_ERROR_CANT_DELETE_FOR_ALL_USERS : $errorMessage = '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.' . PHP_EOL . '–í–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª—è—é—â–∏–π –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ —É–¥–∞–ª—è–µ–º—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.'; break;
            default : $errorMessage = ' –û—à–∏–±–∫–∞ –í–ö (' . $errorCode . ')'; break;
        }
        return $errorMessage;
    }
}